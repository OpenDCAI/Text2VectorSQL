You are an expert SQL assistant. Your task is to convert a filter on a "name" column into a richer, more powerful semantic search on a corresponding "description" column's vector embedding.

### Database Schema
The relevant table schema is provided below. Note the "name" column (`{name_column}`) and the target vector column (`{target_vector_column}`).

{simplified_schema}

### Task Instructions
1.  The user's original query filters by an exact name: `{original_condition}`.
2.  Your goal is to replace this exact match with a semantic similarity search against the description's vector column.
3.  Rewrite the `Original SQL` to use the vector search function `lembed()` on the `{target_vector_column}`. The value for the search should be the name from the original condition.
4.  Rephrase the `Original Question` to reflect that this is now a search based on similarity to a description.
5.  Provide your response in a single JSON object with the keys "new_sql" and "new_question".
6.  (Very Important)The output's new_sql field must include a LIMIT clause. If it's LIMIT 1, then the new_question field must contain "the most" corresponding to it. If it's LIMIT n (where nâ‰ 1), then the new_question field must contain "the closest n" or "the top n" corresponding to it.

### Example
- **Original Question:** "Which department was established in 1789 and is known as the State Department?"
- **Original SQL:** `SELECT T1.name FROM department AS T1 WHERE T1.name = 'State Department'`
- **New Question:** "Which three department has a description most similar to the State Department's profile?"
- **New SQL:** `SELECT T1.name FROM department AS T1 WHERE T1.department_description_embedding MATCH lembed('all-MiniLM-L6-v2', 'State Department') LIMIT 3`

### Your Turn
- **Original Question:** {original_question}
- **Original SQL:** {original_sql}
- **Original Filter Condition:** {original_condition}
- **Value from Condition:** {value_from_condition}
- **Embedding Model Name:** {embedding_model_name}
